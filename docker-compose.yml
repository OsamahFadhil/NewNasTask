version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: insight_invoicing_postgres
    environment:
      POSTGRES_DB: InsightInvoicingDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - insight_invoicing_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: insight_invoicing_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9002:9001"
    volumes:
      - minio_data:/data
    networks:
      - insight_invoicing_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # API Application
  api:
    build: .
    container_name: insight_invoicing_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=InsightInvoicingDb;Username=postgres;Password=postgres123;
      - MinIO__Endpoint=minio:9000
      - MinIO__AccessKey=minioadmin
      - MinIO__SecretKey=minioadmin
      - MinIO__UseSSL=false
      - MinIO__DefaultBucket=invoicing-files
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - insight_invoicing_network
    volumes:
      - ./logs:/app/logs

  # Redis for caching and SignalR backplane
  redis:
    image: redis:7-alpine
    container_name: insight_invoicing_redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - insight_invoicing_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # RabbitMQ for message bus
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: insight_invoicing_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - insight_invoicing_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin for PostgreSQL Management (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: insight_invoicing_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@insight.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - insight_invoicing_network

networks:
  insight_invoicing_network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
  redis_data:
  rabbitmq_data:

